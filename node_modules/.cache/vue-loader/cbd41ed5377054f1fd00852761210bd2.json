{"remainingRequest":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\src\\pages\\schoolboy\\task-execute\\TaskLayout.vue?vue&type=style&index=0&id=bfb08174&lang=sass&scoped=true&","dependencies":[{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\src\\pages\\schoolboy\\task-execute\\TaskLayout.vue","mtime":1604217662000},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1602893217732},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1602893217884},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\postcss-loader\\src\\index.js","mtime":1597332931051},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1597332931168},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602893211453},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1602893217884}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGFzay1jb250YWluZXIKICB3aWR0aDogMTAwdncKICBiYWNrZ3JvdW5kOiAjMDAwMDAwCgoubWFpbi1pbmZvCiAgZGlzcGxheTogZmxleAogIGZsZXgtd3JhcDogbm93cmFwCiAgaGVpZ2h0OiA4MC42dmgKICBmb250LXNpemU6IDE0cHgKICBsaW5lLWhlaWdodDogMTdweAoKLmNvZGUtc3BhY2UKICB3aWR0aDogNTV2dwogIHBhZGRpbmc6IDMwcHggMjBweAogIGJhY2tncm91bmQ6ICMzNTI4NzIKICBjb2xvcjogI0ZGRkZGRgogIG91dGxpbmU6IG5vbmUKICBib3JkZXI6IG5vbmUKICByZXNpemU6IG5vbmUKCi50YXNrLWFjdGlvbgogIGhlaWdodDogOS43dmgKICBtYXJnaW4tbGVmdDogMjV2dwogIGRpc3BsYXk6IGZsZXgKICBhbGlnbi1pdGVtczogY2VudGVyCiAgY29sdW1uLWdhcDogMjBweAo="},{"version":3,"sources":["TaskLayout.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"TaskLayout.vue","sourceRoot":"src/pages/schoolboy/task-execute","sourcesContent":["<template>\n <div v-if=\"task && isRouteAvailable('SCHOOLBOY')\" class=\"task-container\">\n   <div class=\"main-info\">\n      <task-parameters-layout :task=\"task\"/>\n       <textarea\n           v-if=\"trySchoolboy\"\n           class=\"code-space\"\n           v-model=\"trySchoolboy.code\"\n           @keydown=\"handleTab($event)\"\n           :disabled=\"isTextAreaDisabled\"  />\n       <tries-layout\n           :tries-list=\"triesList\"\n           @setActiveTry=\"putCodeInArea($event)\" />\n   </div>\n   <div class=\"task-action\">\n       <tree-select\n           style=\"width: 200px; height: 4vh\"\n           v-model=\"lang\"\n           placeholder=\"\"\n           :options=\"langOptions\"/>\n       <div\n           v-if=\"isShowReviewButton\"\n           class=\"button-review\"\n           @click=\"executeCode()\"\n       >\n         <custom-icon\n             name=\"eye\"\n             color=\"#00D1FF\"\n         />\n         Проверить код\n       </div>\n       <modal-result\n           v-model=\"isModalShow\"\n           :try-schoolboy=\"trySchoolboy\"\n           :test-cases=\"testCasesResult\"\n           @save=\"saveTry\"\n           @close=\"isExecuteCode = false\"\n       />\n       <div\n           v-if=\"isShowClearButton\"\n           class=\"button-clear\"\n           @click=\"clearCode\"\n       >\n         Сбросить\n       </div>\n   </div>\n </div>\n</template>\n\n<script>\nimport http from '@/http/http';\n\nimport { mapGetters, mapMutations } from 'vuex';\nimport TrySchoolboy from '@/domain/TrySchoolboy';\n\nimport route from '@/mixins/route';\n\nimport TaskParametersLayout from '@/pages/schoolboy/task-execute/TaskParametersLayout';\nimport TriesLayout from '@/pages/schoolboy/task-execute/TriesLayout';\nimport ModalResult from '@/pages/schoolboy/task-execute/ModalResult';\n\nexport default {\n  name: 'TaskLayout',\n  components: {\n    ModalResult,\n    TriesLayout,\n    TaskParametersLayout\n  },\n  mixins: [ route ],\n  data() {\n    return {\n      task: null,\n      trySchoolboy: null,\n      isTextAreaDisabled: false,\n      triesList: [],\n      isModalShow: false,\n      isExecuteCode: false,\n      testCases: [],\n      testCasesResult: [],\n      langOptions: [\n        { id: 'java', label: 'java' },\n        { id: 'cpp', label: 'c++'},\n        { id: 'c', label: 'c'},\n      ],\n      lang: null,\n    }\n  },\n  async created() {\n    setTimeout(async () => {\n      this.task = this.SCHOOLBOY_TASK_LIST.find(task => task.id === this.$route.params.id);\n      this.initializeTry();\n\n      await this.setTriesList();\n    }, 120);\n  },\n  computed: {\n    isShowReviewButton() {\n      return !this.isExecuteCode && this.trySchoolboy.code && !this.isTextAreaDisabled;\n    },\n    isShowClearButton() {\n      return !this.isExecuteCode && this.trySchoolboy.code;\n    },\n    ...mapGetters(['SCHOOLBOY_TASK_LIST', 'SCHOOLBOY']),\n  },\n  methods: {\n    handleTab(e) {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        this.trySchoolboy.code = this.trySchoolboy.code.concat('  ');\n      }\n    },\n    clearCode() {\n      this.trySchoolboy.code = '';\n      this.isTextAreaDisabled = false;\n      this.CLEAR_ACTIVE_TRY();\n    },\n    putCodeInArea(taskTry) {\n      this.trySchoolboy.code = taskTry.code;\n      this.isTextAreaDisabled = true;\n    },\n    async setTriesList() {\n      this.triesList = await http.getAllTries(this.SCHOOLBOY.id, this.task.id)\n          .catch(() => console.log('Хьюстон у нас проблемы'));\n    },\n    async saveTry() {\n      this.isExecuteCode = false;\n      const arrLength = this.triesList.length;\n      this.trySchoolboy.tryNumber = arrLength + 1;\n\n\n      const newTry = await http.saveTry(this.trySchoolboy);\n      if (newTry) {\n        this.triesList.push(newTry);\n        this.initializeTry();\n      }\n    },\n    getResult() {\n      let result = 100;\n\n      const initLength = this.testCasesResult.length;\n      const executionCase = this.testCasesResult\n          .filter(tc => tc.type === 'SUCCESS');\n      const executionCaseLength = executionCase.length;\n\n      if (executionCaseLength !== initLength) {\n        result = executionCaseLength / initLength;\n\n        if (result !== 0) {\n          const equalInputLength = executionCase.filter(ec => {\n            const testCase = this.testCases.find(tc => ec.id === tc.id)\n            return testCase.output === ec.output;\n          });\n          if (equalInputLength.length !== 0) {\n            result = equalInputLength / executionCaseLength;\n          }\n        }\n      }\n      return result;\n    },\n    initializeTry() {\n      this.trySchoolboy = new TrySchoolboy({ schoolboyId: this.SCHOOLBOY.id, taskId: this.task.id });\n    },\n    async executeCode() {\n      this.isExecuteCode = true;\n      await http.getAllTestCases(this.trySchoolboy.taskId).then(\n          async (data) => {\n            this.testCases = data;\n            await this.executeAllTestCases().then(() => {\n              this.trySchoolboy.result = this.getResult();\n              this.isModalShow = true\n            });\n          }\n      );\n    },\n    async executeAllTestCases() {\n      const lang = this.lang ? this.lang.id : 'java';\n      for (let i = 0; i < this.testCases.length; i++) {\n        await http.executeTestCase(this.trySchoolboy.code, this.testCases[i], lang).then((data) => {\n          this.testCasesResult[i] = { ...data, id: this.testCases[i].id };\n        });\n      }\n    },\n    ...mapMutations(['CLEAR_ACTIVE_TRY']),\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n .task-container\n   width: 100vw\n   background: #000000\n\n .main-info\n   display: flex\n   flex-wrap: nowrap\n   height: 80.6vh\n   font-size: 14px\n   line-height: 17px\n\n .code-space\n   width: 55vw\n   padding: 30px 20px\n   background: #352872\n   color: #FFFFFF\n   outline: none\n   border: none\n   resize: none\n\n .task-action\n   height: 9.7vh\n   margin-left: 25vw\n   display: flex\n   align-items: center\n   column-gap: 20px\n</style>"]}]}