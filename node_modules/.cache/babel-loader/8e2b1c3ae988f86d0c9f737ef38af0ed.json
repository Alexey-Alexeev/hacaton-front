{"remainingRequest":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\src\\pages\\schoolboy\\task-execute\\TaskLayout.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\src\\pages\\schoolboy\\task-execute\\TaskLayout.vue","mtime":1604217662000},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602893211453},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\babel-loader\\lib\\index.js","mtime":1597332929808},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602893211453},{"path":"C:\\Users\\Alexey\\Desktop\\ЛЦТ\\kk\\hacaton-front\\node_modules\\vue-loader\\lib\\index.js","mtime":1602893217884}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["TaskLayout.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n <div v-if=\"task && isRouteAvailable('SCHOOLBOY')\" class=\"task-container\">\n   <div class=\"main-info\">\n      <task-parameters-layout :task=\"task\"/>\n       <textarea\n           v-if=\"trySchoolboy\"\n           class=\"code-space\"\n           v-model=\"trySchoolboy.code\"\n           @keydown=\"handleTab($event)\"\n           :disabled=\"isTextAreaDisabled\"  />\n       <tries-layout\n           :tries-list=\"triesList\"\n           @setActiveTry=\"putCodeInArea($event)\" />\n   </div>\n   <div class=\"task-action\">\n       <tree-select\n           style=\"width: 200px; height: 4vh\"\n           v-model=\"lang\"\n           placeholder=\"\"\n           :options=\"langOptions\"/>\n       <div\n           v-if=\"isShowReviewButton\"\n           class=\"button-review\"\n           @click=\"executeCode()\"\n       >\n         <custom-icon\n             name=\"eye\"\n             color=\"#00D1FF\"\n         />\n         Проверить код\n       </div>\n       <modal-result\n           v-model=\"isModalShow\"\n           :try-schoolboy=\"trySchoolboy\"\n           :test-cases=\"testCasesResult\"\n           @save=\"saveTry\"\n           @close=\"isExecuteCode = false\"\n       />\n       <div\n           v-if=\"isShowClearButton\"\n           class=\"button-clear\"\n           @click=\"clearCode\"\n       >\n         Сбросить\n       </div>\n   </div>\n </div>\n</template>\n\n<script>\nimport http from '@/http/http';\n\nimport { mapGetters, mapMutations } from 'vuex';\nimport TrySchoolboy from '@/domain/TrySchoolboy';\n\nimport route from '@/mixins/route';\n\nimport TaskParametersLayout from '@/pages/schoolboy/task-execute/TaskParametersLayout';\nimport TriesLayout from '@/pages/schoolboy/task-execute/TriesLayout';\nimport ModalResult from '@/pages/schoolboy/task-execute/ModalResult';\n\nexport default {\n  name: 'TaskLayout',\n  components: {\n    ModalResult,\n    TriesLayout,\n    TaskParametersLayout\n  },\n  mixins: [ route ],\n  data() {\n    return {\n      task: null,\n      trySchoolboy: null,\n      isTextAreaDisabled: false,\n      triesList: [],\n      isModalShow: false,\n      isExecuteCode: false,\n      testCases: [],\n      testCasesResult: [],\n      langOptions: [\n        { id: 'java', label: 'java' },\n        { id: 'cpp', label: 'c++'},\n        { id: 'c', label: 'c'},\n      ],\n      lang: null,\n    }\n  },\n  async created() {\n    setTimeout(async () => {\n      this.task = this.SCHOOLBOY_TASK_LIST.find(task => task.id === this.$route.params.id);\n      this.initializeTry();\n\n      await this.setTriesList();\n    }, 120);\n  },\n  computed: {\n    isShowReviewButton() {\n      return !this.isExecuteCode && this.trySchoolboy.code && !this.isTextAreaDisabled;\n    },\n    isShowClearButton() {\n      return !this.isExecuteCode && this.trySchoolboy.code;\n    },\n    ...mapGetters(['SCHOOLBOY_TASK_LIST', 'SCHOOLBOY']),\n  },\n  methods: {\n    handleTab(e) {\n      if (e.key === 'Tab') {\n        e.preventDefault();\n        this.trySchoolboy.code = this.trySchoolboy.code.concat('  ');\n      }\n    },\n    clearCode() {\n      this.trySchoolboy.code = '';\n      this.isTextAreaDisabled = false;\n      this.CLEAR_ACTIVE_TRY();\n    },\n    putCodeInArea(taskTry) {\n      this.trySchoolboy.code = taskTry.code;\n      this.isTextAreaDisabled = true;\n    },\n    async setTriesList() {\n      this.triesList = await http.getAllTries(this.SCHOOLBOY.id, this.task.id)\n          .catch(() => console.log('Хьюстон у нас проблемы'));\n    },\n    async saveTry() {\n      this.isExecuteCode = false;\n      const arrLength = this.triesList.length;\n      this.trySchoolboy.tryNumber = arrLength + 1;\n\n\n      const newTry = await http.saveTry(this.trySchoolboy);\n      if (newTry) {\n        this.triesList.push(newTry);\n        this.initializeTry();\n      }\n    },\n    getResult() {\n      let result = 100;\n\n      const initLength = this.testCasesResult.length;\n      const executionCase = this.testCasesResult\n          .filter(tc => tc.type === 'SUCCESS');\n      const executionCaseLength = executionCase.length;\n\n      if (executionCaseLength !== initLength) {\n        result = executionCaseLength / initLength;\n\n        if (result !== 0) {\n          const equalInputLength = executionCase.filter(ec => {\n            const testCase = this.testCases.find(tc => ec.id === tc.id)\n            return testCase.output === ec.output;\n          });\n          if (equalInputLength.length !== 0) {\n            result = equalInputLength / executionCaseLength;\n          }\n        }\n      }\n      return result;\n    },\n    initializeTry() {\n      this.trySchoolboy = new TrySchoolboy({ schoolboyId: this.SCHOOLBOY.id, taskId: this.task.id });\n    },\n    async executeCode() {\n      this.isExecuteCode = true;\n      await http.getAllTestCases(this.trySchoolboy.taskId).then(\n          async (data) => {\n            this.testCases = data;\n            await this.executeAllTestCases().then(() => {\n              this.trySchoolboy.result = this.getResult();\n              this.isModalShow = true\n            });\n          }\n      );\n    },\n    async executeAllTestCases() {\n      const lang = this.lang ? this.lang.id : 'java';\n      for (let i = 0; i < this.testCases.length; i++) {\n        await http.executeTestCase(this.trySchoolboy.code, this.testCases[i], lang).then((data) => {\n          this.testCasesResult[i] = { ...data, id: this.testCases[i].id };\n        });\n      }\n    },\n    ...mapMutations(['CLEAR_ACTIVE_TRY']),\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n .task-container\n   width: 100vw\n   background: #000000\n\n .main-info\n   display: flex\n   flex-wrap: nowrap\n   height: 80.6vh\n   font-size: 14px\n   line-height: 17px\n\n .code-space\n   width: 55vw\n   padding: 30px 20px\n   background: #352872\n   color: #FFFFFF\n   outline: none\n   border: none\n   resize: none\n\n .task-action\n   height: 9.7vh\n   margin-left: 25vw\n   display: flex\n   align-items: center\n   column-gap: 20px\n</style>"],"sourceRoot":"src/pages/schoolboy/task-execute"}]}